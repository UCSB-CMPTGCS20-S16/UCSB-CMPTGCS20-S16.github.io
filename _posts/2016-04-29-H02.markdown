---
layout: post
title:  "H02"
date:   2016-04-29 09:50:13 -0700
categories: hwk S16 CS20 H02
---

[Print friendly PDF version](http://www.cs.ucsb.edu/~pconrad/cs20/16S/pdf/CS20-S16-H02.pdf)

<div style="font-size:80%; page-break-before:always;margin-bottom:3em;">&nbsp;</div>

NAME: __________________________________________________________________<br>
UCSB CMPTGCS20 S16 H02.  Due Tue May 10, 2016.  Page 1 of 2<br>

Please read Chapter 3 in the [Guttag textbook](https://mitpress.mit.edu/books/introduction-computation-and-programming-using-python-0), then answer these questions:


(1) Section 3.1 describes "exhaustive enumeriation"

(a) (5 pts) What does the word "exhaustive" mean in this context? 

<div style="margin-bottom:8em;">&nbsp;</div>

(b) (5 pts) What does the word "enumeration" mean in this context? 

<div style="margin-bottom:8em;">&nbsp;</div>

(2) Read Section 3.3 about Floats and Binary. Then answer these questions:

(a) (5 pts) Try the experiment that Guttag outlines at the start of Section 3.2, i.e. type in and run the Python code.  Do you get the same result he did, or something different?  Describe your findings.

<div style="margin-bottom:8em;">&nbsp;</div>

(b) (5 pts) What is the decimal equivalent of 11010 ?

<div style="margin-bottom:8em;page-break-after:always;">&nbsp;</div>

UCSB CMPTGCS20 S16 H02.    Page 2 of 2

Read section 3.2 and 3.4 about two ways of computing square roots.  Following this may help you in the following exercise.

(3) (20 pts) Here is a cyber-dojo practice session: http://cyber-dojo.org/enter/show/E87A4DDE09 based on the finger exercise from Section 3.1 of Guttag's book.     This version is slightly different: instead of printing out the results, we return them as the first two elements of a list.   

I'd like you to try the exercise in cyber dojo--but FIRST, try writing out a solution the problem below.   Here is the "stub" of the Python function.  Underneath it, write your "first attempt" at a final correct solution.

Then, try either testing your solution in cyber-dojo.org by typing it in immediately, or by incrementally developing a solution--one that passes one test case at a time.    Then write down your FINAL correct solution.     It's ok if your first attempt doesn't work right.     If your final solution still isn't working at the time the homework is "due", that's ok too.  I'm more interested in your learning process than your outcome.  If it doesn't work, we can look together at why, and what you need to learn to be able to write a correct solution.

Stub:

~~~
def findRootPwr(number):
  return [-1,-1]
~~~

<table border="1">
<tr>
 <th style="width:200px">First Attempt</th>
 <th style="width:200px">Final Correct Solution</th>
</tr>
<tr>
 <td border="1"><div style="margin-bottom:8em;width:300px;"><br><br><br><br><br><br><br></div></td>
 <td border="1"><div style="margin-bottom:8em;width:300px;">&nbsp;</div></td>
</tr>
</table>

(4) (10 pts) If your first version worked, reflect on what you had to do to get a working version on the first try.   If the first version didn't work, but your subsequent attempt did, reflect on what you had to adjust in your thinking to get to a working version.  If your code still doesn't work, reflect on your process up to this point.


<div style="margin-bottom:12em;">&nbsp;</div>

End of H02

<div style="margin-bottom:1em;page-break-after:always">&nbsp;</div>
